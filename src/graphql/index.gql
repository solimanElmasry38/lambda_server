# import * from "./types/user.gql"
# import * from "./types/token.gql"
# import * from "./types/offer.gql"
# import * from "./types/inputs.gql"
# import * from "./types/product.gql"
# import * from "./types/category.gql"
# import * from "./types/review.gql"
# import * from "./types/cartItem.gql"

type addToCart {
  availability: Boolean
}
input IsAvInp {
  productId: String
}
type CartCount {
  ProductsInCart: Int
}
input getCartCountInp {
  usr_id: String
}
type Query {
  MAIN_QUERY:String
  MAIN_QU:String
  IS_AVILABLE(input: IsAvInp): Boolean
  USERS_GET(input: AuthInp): [User]
  USER_GET(input: AuthInp): User
  OFFERS_GET(input: offerInp): [Offer]
  PRODUCTS_GET(input: prodsInp): [Product]
  PRODUCT_GET(input: prodInp): Product
  GET_CATEGORY(input: CategInp): category
  GET_CATEGORYS: [category]
  GET_PRODUCT_REVIEWS(input: GetReviewsInp): review
  GET_CART_PRODUCTS(input: getCartInp): String
  GET_CART_COUNT(input: getCartCountInp): Int
}
type Mutation {
  ADD_TO_CART(input: addToCartInp): addToCart
  USER_CREATE(input: UserInp): Id
  VERIFY_EMAIL(input: verifyInp): Token
  LOGIN(input: LoginInp): Token
  RATE_PRODUCT(input: ReatingInp): String
  REMOVE_PRODUCT(input: removeProdInp): String

  REMOVER_OFFERS(input: removeProdInp): String
  REMOVER_USERS(input: removeProdInp): String
  REMOVER_CATEGORYS(input: removeProdInp): String

  CREATE_CATEGORY(input: createCategoryInp): String
  CREATE_PRODUCT(input: createProductInp): String
  CREATE_OFFER(input: createOfferInp): String
}

type Subscription {
  ADD_TO_CART_SUB: CartCount
  CREATE_PRODUCT_SUB: Product
  CREATE_OFFER_SUB: Offer
  CREATE_CATEGORY_SUB: category
}
