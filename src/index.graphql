type Cart{
  id:ID
}


input AuthInp {
     id:ID,
    token:String,
}

input UserInp {
  user_name: String                                                                                                
  email: String
  password: String
  img: String
}

input LoginInp {
	email: String, 
	password: String
}

input verifyInp {
    id:ID
    otp:String
}

input offerInp {
  usr_id:ID
  usr_token:String
}

input AddCrtInp {
  usr_id: ID
  token: String
  product_id: ID
}

input CategInp {
  Categ_name:String
  
}



input prodInp{
	id:ID
}

input prodsInp{
  filter: String
  orderByName:Sort
  byCategory:String

}
enum Sort {
  asc
  desc
}

input ReatingInp{
  reating:Int
  product_id:String
  user_id:String
}

input GetReviewsInp{
  Product_id:String
}


input getCartInp{
  usr_id:String


}
input addToCartInp{
  Product_id:String
  usr_id:String
 Product_count:Int
}
type Offer{
    id:ID,
    name:String,
    img:String
}


type Product {
  id: ID
  name: String
  img: String
  price: Int
  count: Int
  is_available: Boolean
  desc: String
  categorys:category
  coun_in_cart:Int
  # Products_count:Int
}



type category {
	name:String
	id:ID
	img:String
	product:[Product]
}

type review{
    review:Int
    
}

type CartItem{
products:[Product]
TotalProductInCart:Int
}

type Token {
    id:ID,
    token:String
}

type Id {
    id:ID
}
scalar DateTime
type User {
  id: ID
  user_name: String
  email: String
  img: String
  password: String
  is_admin: Boolean
  joined_at: DateTime
  last_update: DateTime
  Cart: Cart
}

                              


type addToCart {
  availability: Boolean
}
input IsAvInp {
  productId: String
}
type CartCount {
  ProductsInCart: Int
}
input getCartCountInp{
  usr_id:String
}
type Query {
  IS_AVILABLE(input: IsAvInp): Boolean
  USERS_GET(input: AuthInp): [User]
  USER_GET(input: AuthInp): User
  OFFERS_GET(input: offerInp): [Offer]
  PRODUCTS_GET(input: prodsInp): [Product]
  PRODUCT_GET(input: prodInp): Product
  GET_CATEGORY(input: CategInp): category
  GET_CATEGORYS: [category]
  GET_PRODUCT_REVIEWS(input: GetReviewsInp): review
  GET_CART_PRODUCTS(input: getCartInp): CartItem
  GET_CART_COUNT(input:getCartCountInp):Int
}
type Mutation {
  ADD_TO_CART(input: addToCartInp): addToCart
  USER_CREATE(input: UserInp): Id
  VERIFY_EMAIL(input: verifyInp): Token
  LOGIN(input: LoginInp): Token
  RATE_PRODUCT(input: ReatingInp): String
}

type Subscription {
  ADD_TO_CART_SUB: CartCount
}
